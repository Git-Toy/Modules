#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьОтборы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	ОбработатьИзменениеРеквизитовШапки();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗданиеПриИзменении(Элемент)
	
	ОбработатьИзменениеРеквизитовШапки();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокДокументов

&НаКлиенте
Процедура СписокДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "СписокДокументовПометка" Тогда
		СтандартнаяОбработка = Ложь;
		ИзменитьПометкуДокумента(ВыбраннаяСтрока, Элемент.ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокДокументовПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	ТаблицаВыбранныхДокументов = Неопределено;
	Настройки.ДополнительныеСвойства.Свойство("ТаблицаВыбранныхДокументов", ТаблицаВыбранныхДокументов);
	
	Если ТаблицаВыбранныхДокументов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из Строки Цикл
		Документ = Строка.Ключ;
		
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Документ", Документ);
		МассивНайденныхСтрок = ТаблицаВыбранныхДокументов.НайтиСтроки(СтруктураОтбора);
		
		Если МассивНайденныхСтрок.Количество() > 0 Тогда
			Строка.Значение.Данные.Пометка = МассивНайденныхСтрок[0].Пометка;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыгрузитьДокументы(Команда)
	
	ВыгрузитьДокументыНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция НайтиУзелОбмена(УзелОбмена)
	
	ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	сакс_ЖКХ_УХ.Ссылка КАК УзелОбмена
		|ИЗ
		|	ПланОбмена.сакс_ЖКХ_УХ КАК сакс_ЖКХ_УХ
		|ГДЕ
		|	сакс_ЖКХ_УХ.Код = ""УХ""";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		УзелОбмена = Выборка.УзелОбмена;
		Возврат Истина;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Функция ПолучитьМассивОтобранныхДокументов()
	
	Схема = Элементы.СписокДокументов.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.СписокДокументов.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	ТипГенератора = Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений");
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , , ТипГенератора);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	МассивРезультат = ТаблицаРезультат.ВыгрузитьКолонку("Документ");
	
	Возврат МассивРезультат;
	
КонецФункции

&НаКлиенте
Процедура УстановитьОтборы()
	
	ЗаполнитьЗначенияСвойств(Элементы.СписокДокументов.Период, Период);
	Элементы.СписокДокументов.Обновить();
	
	Если ЗначениеЗаполнено(Здание) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			СписокДокументов, "Здание", Здание, , , Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			СписокДокументов, "Здание", Здание, , , Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеРеквизитовШапки()
	
	ТаблицаВыбранныхДокументов.Очистить();
	УстановитьОтборы();
	
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьДокументыНаСервере()
	
	УзелОбмена = Неопределено;
	Если Не НайтиУзелОбмена(УзелОбмена) Тогда
		Возврат;
	КонецЕсли;
	
	МассивОтобранныхДокументов = ПолучитьМассивОтобранныхДокументов();
	МассивОбработанныхСтрок = Новый Массив;
	
	Для Каждого СтрокаТаблицы Из ТаблицаВыбранныхДокументов Цикл
		Документ = СтрокаТаблицы.Документ;
		Если МассивОтобранныхДокументов.Найти(Документ) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = Документ.ПолучитьОбъект();
		ДокументОбъект.ДополнительныеСвойства.Вставить("РазрешенаРегистрацияДокумента");
		ОбменДаннымиСобытия.ПриОтправкеДанныхКорреспонденту(ДокументОбъект, ОтправкаЭлементаДанных.Авто, , УзелОбмена);
		
		МассивОбработанныхСтрок.Добавить(СтрокаТаблицы);
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы Из МассивОбработанныхСтрок Цикл
		ТаблицаВыбранныхДокументов.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
	Элементы.СписокДокументов.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьПометкуДокумента(Документ, Знач ТекущиеДанные)
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Документ", Документ);
	МассивНайденныхСтрок = ТаблицаВыбранныхДокументов.НайтиСтроки(СтруктураОтбора);
	
	Если МассивНайденныхСтрок.Количество() = 0 Тогда
		НоваяСтрока = ТаблицаВыбранныхДокументов.Добавить();
		НоваяСтрока.Документ = Документ;
		НоваяСтрока.Пометка = ТекущиеДанные.Пометка;
		НоваяСтрока.ПометкаИсходная = ТекущиеДанные.Пометка;
	Иначе
		НоваяСтрока = МассивНайденныхСтрок[0];
	КонецЕсли;
	
	НоваяСтрока.Пометка = НЕ ТекущиеДанные.Пометка;
	
	Если НоваяСтрока.Пометка = НоваяСтрока.ПометкаИсходная Тогда
		ТаблицаВыбранныхДокументов.Удалить(НоваяСтрока);
	КонецЕсли;
	
	ДополнительныеСвойстваНастроек = СписокДокументов.КомпоновщикНастроек.Настройки.ДополнительныеСвойства;
	ДополнительныеСвойстваНастроек.Вставить("ТаблицаВыбранныхДокументов", ТаблицаВыбранныхДокументов);
	
КонецПроцедуры

#КонецОбласти