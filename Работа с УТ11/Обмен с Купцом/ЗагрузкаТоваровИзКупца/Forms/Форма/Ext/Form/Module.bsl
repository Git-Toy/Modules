#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьГруппыТоваровИзКупца(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		ПараметрыМетода = Новый Структура;
		ПараметрыМетода.Вставить("ИсточникДанных", ИсточникДанных);
		ПараметрыМетода.Вставить("Пользователь", Пользователь);
		ПараметрыМетода.Вставить("Пароль", Пароль);
		
		ВыполнитьМетодВФоне(
			"ЗагрузитьГруппыТоваровИзКупца",
			НСтр("ru = 'Обработка данных'"),
			ПараметрыМетода);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ВыполнитьМетодВФонеНаСервере(ИмяМетода, ПараметрыМетода = Неопределено)
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		Попытка
			ЗаданиеВыполнено = ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
		Исключение
			ЗаданиеВыполнено = Истина;
		КонецПопытки;
	Иначе
		ЗаданиеВыполнено = Истина;
	КонецЕсли;
	
	Если НЕ ЗаданиеВыполнено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВыполняемыйМетод = "ДлительныеОперации.ВыполнитьПроцедуруМодуляОбъектаОбработки";
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ЭтоВнешняяОбработка = Не Метаданные.Обработки.Содержит(ОбработкаОбъект.Метаданные());
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ИдентификаторФормы", ЭтаФорма.УникальныйИдентификатор);
	СтруктураПараметров.Вставить("ИмяФормы", ЭтаФорма.ИмяФормы);
	
	Если ТипЗнч(ПараметрыМетода) = Тип("Структура") Тогда
		Для Каждого ПараметрМетода Из ПараметрыМетода Цикл
			СтруктураПараметров.Вставить(ПараметрМетода.Ключ, ПараметрМетода.Значение);
		КонецЦикла;
	КонецЕсли;
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("ИмяОбработки", ОбработкаОбъект.ИспользуемоеИмяФайла);
	ПараметрыЗадания.Вставить("ИмяМетода", ИмяМетода);
	ПараметрыЗадания.Вставить("ПараметрыВыполнения", СтруктураПараметров);
	ПараметрыЗадания.Вставить("ЭтоВнешняяОбработка", ЭтоВнешняяОбработка);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(ЭтаФорма.УникальныйИдентификатор);
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	РезультатФоновогоЗадания = ДлительныеОперации.ВыполнитьВФоне(ВыполняемыйМетод, ПараметрыЗадания, ПараметрыВыполнения);
	ИдентификаторЗадания = РезультатФоновогоЗадания.ИдентификаторЗадания;
	
	Возврат РезультатФоновогоЗадания;
	
КонецФункции

&НаКлиенте
Процедура ПослеФоновойОбработкиДанных(Задание, ДополнительныеПараметры) Экспорт
	
	Если Задание <> Неопределено Тогда
		Если Задание.Статус = "Ошибка" Тогда
			ТекстОшибки = Задание.ПодробноеПредставлениеОшибки;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьМетодВФоне(ИмяМетода, НаименованиеЗадания, ПараметрыМетода = Неопределено)
	
	Задание = ВыполнитьМетодВФонеНаСервере(ИмяМетода, ПараметрыМетода);
	
	Если Задание <> Неопределено Тогда
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ПослеФоновойОбработкиДанных", ЭтотОбъект);
		
		НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		НастройкиОжидания.ВыводитьПрогрессВыполнения = Истина;
		НастройкиОжидания.Интервал = 1;
		НастройкиОжидания.ТекстСообщения = НаименованиеЗадания;
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(Задание, ОповещениеОЗавершении, НастройкиОжидания);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти